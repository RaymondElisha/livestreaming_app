plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {

    compileSdkVersion 31

    namespace = "com.example.streaming_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {

        minSdkVersion 23
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.streaming_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        //minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.10'
    implementation 'androidx.core:core-ktx:1.6.0'
    //implementation 'com.google.firebase:firebase-core:19.0.0'
    //implementation 'com.google.firebase:firebase-auth:21.0.1'
    //implementation 'com.google.firebase:firebase-firestore:24.0.0'
    //implementation 'com.google.firebase:firebase-storage:20.0.0'
    //implementation 'io.agora.rtc:agora-rtc-sdk:6.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    //implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //implementation 'com.google.firebase:firebase-auth:21.0.1'
    //implementation 'com.google.firebase:firebase-firestore:23.0.3'
    //implementation 'com.google.firebase:firebase-storage:20.0.0'
    //implementation 'io.flutter:flutter_embedding_debug:1.0.0-5f0b6e0a56'
    //implementation 'io.flutter.plugins:firebase_core:2.0.0'
    //implementation 'io.flutter.plugins:firebase_auth:3.0.1'
    //implementation 'io.flutter.plugins:cloud_firestore:3.0.1'
    //implementation 'io.flutter.plugins:firebase_storage:4.0.0'
    //implementation 'io.flutter.plugins:agora_rtc_engine:4.0.7'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
flutter {
    source = "../.."
}
